////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	Plane.h
//
// summary:	Declares the plane class
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once

namespace HAPISPACE {

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>
	/// very simple / incomplete plane class - may be expanded later. A plane can be represented by a normal and
	/// an offset.
	/// </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	class Plane
	{
	public:
		VectorF normal;
		float offset;
		Plane() noexcept = default;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Constructor. </summary>
		///
		/// <param name="norm">	The normal. </param>
		/// <param name="off"> 	The offset. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		Plane(const VectorF& norm, float off) noexcept : normal(norm), offset(off) {}
	};

}
